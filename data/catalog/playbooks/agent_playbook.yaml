apiVersion: noetl.io/v1
kind: Playbook
name: postgres_csv_workflow
path: /playbooks/postgres_csv_workflow

environment:
  dbHost: "localhost"
  dbPort: 5432
  dbName: "test_db"
  dbUser: "test_user"
  dbPassword: "secure_password"
  outputCsvPath: "data/exported_data.csv"
  logPath: "logs/postgres_csv_{{ context.jobId }}.log"
  logLevel: INFO

context:
  jobId: "{{ generate_uuid() }}"
  start:
    - step: initialize_db
      status: READY
  state: NEW

workbook:
  - task: create_table
    run:
      - action: create_table
        method: postgres
        dbUri: "postgresql://{{ environment.dbUser }}:{{ environment.dbPassword }}@{{ environment.dbHost }}:{{ environment.dbPort }}/{{ environment.dbName }}"
        desc: "Create table in PostgreSQL database"
        query: |
          CREATE TABLE IF NOT EXISTS users (
              user_id SERIAL PRIMARY KEY,
              username VARCHAR(50),
              email VARCHAR(100),
              created_at TIMESTAMP DEFAULT NOW()
          );

  - task: insert_record
    run:
      - action: insert_record
        method: postgres
        desc: "Insert a record into PostgreSQL database"
        query: |
          INSERT INTO users (username, email)
          VALUES ('johndoe', 'john@example.com');

  - task: export_to_csv
    run:
      - action: export_csv
        method: postgres_to_csv
        desc: "Export data from PostgreSQL table to CSV"
        query: "SELECT * FROM users;"
        output: "{{ environment.outputCsvPath }}"
        includeHeaders: true

  - task: handle_error_task
    run:
      - action: log
        method: log
        desc: "Log error message"
        message: "{{ error.message }}"
        level: ERROR

#events:
#  REQUESTED: [REGISTERED, CANCELED]
#  REGISTERED: [STARTED, CANCELED]

workflow:
  - when: "{{ event.type == 'workflow_started' and event.jobId == context.jobId }}"
    step: initialize_db
    mode: sequential
    run:
      - task: create_table
      - task: insert_record
      - action: log
        method: log
        desc: "Log initialization message"
        message: "Database initialized and record inserted."
        level: INFO
      - workflow: export_workflow
        params:
          dbHost: "{{ environment.dbHost }}"
          dbPort: "{{ environment.dbPort }}"
          dbName: "{{ environment.dbName }}"
    next:
      - when: "{{ result.success }}"
        then:
          - step: export_step1
          - step: export_step2
      - when: "{{ not result.success }}"
        then:
          - step: handle_error

  - step: export_step
      - task: export_to_csv

  - step: handle_error
      - task: handle_error_task
      - action: log
        method: log
        desc: "Log error message"
        message: "An error occurred during the workflow."
        level: ERROR
