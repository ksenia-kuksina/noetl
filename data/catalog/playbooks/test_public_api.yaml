apiVersion: noetl.io/v1
kind: Playbook
name: test_public_api
path: /catalog/playbooks/test_public_api

environment:
  dataPath: data
  outputPath: "{{ environment.dataPath }}/output/"
  templatePath: "{{ environment.dataPath }}/catalog/templates/default.tpl"
  playbookPath: "{{ environment.dataPath }}/catalog/playbooks/test_public_api.yaml"
  executionPath: "{{ environment.dataPath }}/executions/job_{{ jobId }}.json"
  storageType: json
  sqlitePath: "{{ environment.dataPath }}/state/noetl.db"
  logPath: "{{ environment.dataPath }}/logs/noetl_{{ jobId }}.log"
  logLevel: DEBUG
  logFormat: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

context:
  baseUrl: "https://jsonplaceholder.typicode.com"
  break: false
  retry: 0
  jobId: "{{ generate_uuid() }}"
  steps:
    - name: public_api_test
      status: READY
  state: NEW

tasks:
  - name: test_posts
    run:
      - action: http
        method: get
        endpoint: "{{ context.baseUrl }}/posts"
        params: {}
        retry: 3
        desc: "Retrieve posts from the public API"
      - action: http
        method: post
        endpoint: "{{ context.baseUrl }}/posts"
        params:
          title: "Test Post"
          body: "This is a sample post created for testing"
          userId: 1
        desc: "Create a new post in the public API"

  - name: test_users
    run:
      - action: http
        method: get
        endpoint: "{{ context.baseUrl }}/users"
        params: {}
        retry: 3
        desc: "Fetch user data from the public API"
      - action: http
        method: get
        endpoint: "{{ context.baseUrl }}/users/1"
        params: {}
        desc: "Fetch details of user with ID 1"

  - name: test_comments
    run:
      - action: http
        method: get
        endpoint: "{{ context.baseUrl }}/comments"
        params: {}
        retry: 3
        desc: "Fetch comments from the API"
      - action: http
        method: post
        endpoint: "{{ context.baseUrl }}/comments"
        params:
          postId: 1
          name: "Sample comment"
          email: "email@example.com"
          body: "This is a test comment sent to the API."
        desc: "Post a comment to a specific post"

steps:
  - name: public_api_test
    mode: sequential
    when: "{{ event.type == 'workflow_started' and event.jobId == context.jobId }}"
    run:
      - task: test_posts
      - task: test_users
      - task: test_comments
    next: []