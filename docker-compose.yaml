networks:
  noetl-network:
    name: noetl-network

services:
  database:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    container_name: database
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    command: "postgres -c port=5432 -c config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - ./database/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./database/postgres/init_database.sh:/docker-entrypoint-initdb.d/init_database.sh
      - ./database/postgres/schema_ddl.sql:/schema_ddl.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d demodb -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
    networks:
      - noetl-network

  server:
    build:
      context: .
      dockerfile: docker/noetl/development/Dockerfile
    container_name: server
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./.secrets/noetl-service-account.json:/opt/noetl/secrets/application_default_credentials.json
      - ./data:/opt/noetl/data
    environment:
      TZ: ${TZ}
      LOG_LEVEL: ${LOG_LEVEL}
      PYTHONPATH: ${PYTHONPATH}
      NOETL_DATA_DIR: ${NOETL_DATA_DIR}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      NOETL_USER: ${NOETL_USER}
      NOETL_PASSWORD: ${NOETL_PASSWORD}
      NOETL_SCHEMA: ${NOETL_SCHEMA}
      GOOGLE_APPLICATION_CREDENTIALS: /opt/noetl/secrets/application_default_credentials.json
    networks:
      - noetl-network

  pip-standalone-api:
    build:
      context: .
      dockerfile: docker/noetl/standalone/Dockerfile
    container_name: standalone-api
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8084:8084"
    volumes:
      - ./.secrets/noetl-service-account.json:/opt/noetl/secrets/application_default_credentials.json
      - ./data:/opt/noetl/data
    environment:
      TZ: ${TZ}
      LOG_LEVEL: ${LOG_LEVEL}
      PYTHONPATH: ${PYTHONPATH}
      NOETL_DATA_DIR: ${NOETL_DATA_DIR}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      NOETL_USER: ${NOETL_USER}
      NOETL_PASSWORD: ${NOETL_PASSWORD}
      NOETL_SCHEMA: ${NOETL_SCHEMA}
      GOOGLE_APPLICATION_CREDENTIALS: /opt/noetl/secrets/application_default_credentials.json
    networks:
      - noetl-network
    command: ["python", "-m", "uvicorn", "--factory", "noetl.main:create_app", "--host", "0.0.0.0", "--port", "8084", "--reload"]

  jupyter:
    build:
      context: .
      dockerfile: docker/jupyter/Dockerfile
    container_name: noetl-jupyter
    ports:
      - "8899:8888"
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./data/work:/home/jovyan/work
      - ./examples:/home/jovyan/examples
      - ./data/jupyter:/home/jovyan/data
      - .secrets/noetl-service-account.json:/home/jovyan/secrets/noetl-service-account.json
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - JUPYTER_ENABLE_LAB=yes
      - TZ=${TZ}
      - GOOGLE_APPLICATION_CREDENTIALS=/home/jovyan/secrets/noetl-service-account.json
    networks:
      - noetl-network
