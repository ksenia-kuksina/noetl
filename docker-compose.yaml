networks:
  noetl_dev:
    name: noetl_dev

services:
  noetldb:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    container_name: noetldb
    environment:
      TZ: America/Chicago
      POSTGRES_USER: noetl
      POSTGRES_PASSWORD: noetl
      POSTGRES_SCHEMA: public
      POSTGRES_DB: noetl
      PGDATA: /var/lib/postgresql/data/pgdata
    command: >
      postgres
      -c port=5434
      -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./data/noetl_postgres_db/init_database.sh:/docker-entrypoint-initdb.d/init_database.sh
      - ./data/noetl_postgres_db/noetl_schema_ddl.sql:/noetl_schema_ddl.sql
    ports:
      - "5434:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noetl -d noetl -p 5434"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
    networks:
      - noetl_dev

  noetlapi:
    build:
      context: .
      dockerfile: docker/noetl/Dockerfile
    container_name: noetlapi
    depends_on:
      noetldb:
        condition: service_healthy
    ports:
      - "8001:8001"
    volumes:
      - ./pyproject.toml:/opt/noetl/pyproject.toml
      - ./noetl/:/usr/noetl/
      - ./data/catalog/:/usr/data/catalog
      - ./data/noetl_postgres_db/log:/var/lib/postgresql/log
      - ./secrets/application_default_credentials.json:/secrets/application_default_credentials.json
    environment:
      TZ: America/Chicago
      LOG_LEVEL: INFO
      PYTHONPATH: "/app"
      NOETL_DATA_DIR: "/usr/data/"
      POSTGRES_USER: noetl
      POSTGRES_DB: noetl
      POSTGRES_PASSWORD: noetl
      POSTGRES_HOST: noetldb
      POSTGRES_PORT: 5434
      POSTGRES_SCHEMA: public
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/application_default_credentials.json
    networks:
      - noetl_dev
    command: uv run uvicorn noetl.main:app --host 0.0.0.0 --port 8001 --reload
