REGISTER WORKFLOW
COMMAND PAYLOAD
add workflow yaml base64
NOTE: Workflow registration have to check if workflow exists first, and return workflow if exists.
Workflow can be overriden if --force key is supplied.
We can enhance versions in the future.

1. UC WORKFLOW REGISTRATION
GRAPHQL CLIENT
CLI->
curl http://api.noetl.io/gql payload: {workflowName: <workflow Name>, payload: <workflow Config>}

GRAPHQL API HANDLER->
QUERY:
[MUTATION] {query: workflowRegistrationRequest, payload: {workflowName: <Workflow Name>, template: <YAML Workflow Template>}}
API->NATS STREAM PUBLISH-> WorkflowRegistrationRequestReceived
stream: events
subject: event.api.workflow.registration.<referenceID? not sure if we need that here>.requested
payload: {name: <workflowName>, template: <workflowTemplate>}
API RETURN-> referenceID

DISPATCHER->NATS STREAM SUBSCRIBE->
stream: events
subject: event.api.registration.*.requested
payload: {name: <pluginName>, refId: <referenceID>, imageUrl: <imageUrl>}

DISPATCHER->NATS STREAM PUBLISH->
stream: commands
subject: command.api.registry.add
payload: {name: <pluginName>, refId: <referenceID>, imageUrl: <imageUrl>}

CATALOG REGISTRY->NATS STREAM SUBSCRIBE->
stream: commands
subject: command.api.registry.add
payload: {name: <pluginName>, refId: <referenceID>, imageUrl: <imageUrl>}

CATALOG REGISTRY->NATS KV PUT->
bucket: plugins
key: <pluginName>
value: imageUrl: <imageUrl>

DISPATCHER->NATS STREAM PUBLISH->
stream: events
subject: event.plugin.registered
payload: {name: <pluginName>, refId: <referenceID>}