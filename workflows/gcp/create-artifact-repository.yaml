apiVersion: workflow.noetl.io/v1
kind: Workflow
metadata:
  name: create-gcp-artifact-repository
spec:
  vars:
    GCP_PROJECT_ID: test
    GCP_REGION: us-west1
    REPOSITORY_NAME: test
    INITIAL_TASK: "start"
  timeout: 60
  schedule: "*/5 * * * *"
  initialSettings:
    start: "{{ spec.vars.INITIAL_TASK }}"
    state: ready
  transitions:
    ready: running
    running: [completed, failed, terminated]
  tasks:
    start:
      switch:
        - next: [ create-repository ]
          condition: "{{ $.tasks.check-repository.steps.check-repo-exists.exitCode }} != 0"
        - next: [ ]
          condition: "{{ data.tasks.check-repository.steps.check-repo-exists.exitCode }} == 0"

    check-repository:
      steps:
        check-repo-exists:
          description: Check if the repository exists
          type: shell
          command: "gcloud"
          args:
            - "artifacts"
            - "repositories"
            - "describe"
            - "{{ spec.vars.REPOSITORY_NAME }}"
            - "--location={{ spec.vars.GCP_REGION }}"
            - "--project={{ spec.vars.GCP_PROJECT_ID }} "
          exitCode: 0
        check-repo-exists-2:
          description: Check if the repository exists
          type: shell
          command: "gcloud"
          args:
            - "artifacts"
            - "repositories"
            - "describe"
            - "{{ spec.vars.REPOSITORY_NAME }}"
            - "--location={{ spec.vars.GCP_REGION }}"
            - "--project={{ spec.vars.GCP_PROJECT_ID }} {{ $.tasks.check-repository.steps.check-repo-exists.exitCode }}"
          exitCode: 0
      switch:
        - next: [create-repository]
          condition: "{{ $.tasks.check-repository.steps.check-repo-exists.exitCode }} != 0"
        - next: []
          condition: "{{ data.tasks.check-repository.steps.check-repo-exists.exitCode }} == 0"
    create-repository:
      steps:
        create-repo:
          description: Create the repository
          type: shell
          command: "gcloud"
          args:
            - "artifacts"
            - "repositories"
            - "create"
            - "{{ vars.REPOSITORY_NAME }}"
            - "--repository-format=docker"
            - "--location={{ vars.GCP_REGION }}"
            - "--project={{ vars.GCP_PROJECT_ID }}"


#id, re, me, pa
#
#11, 11, {},{},
#workflow.11.create-gcp-artifact-repository.task.create-repository.step.create-repo.event_type.created, 11, {event_type:create}, {task:create-repository, step: create-repo, event_type: reg}
#2, 11, {task:create-repository, step: create-repo, event_type: completed}
#
#
#workflow.11.create-gcp-artifact-repository.task.create-repository.step.create-repo.command_type.create, 11, {event_type:create}, {task:create-repository, step: create-repo, event_type: reg}
#
#
#workflow.11.create-gcp-artifact-repository.task.create-repository.step.create-repo.command_type.create, 11, {command_type:create, workflow}, {task:create-repository, step: create-repo, event_type: reg}
#
#
#command API: create workflow create-gcp-artifact-repository payload{user_id: aqwedasdfs, message_id: 23412341234}                    workfklow_id
#command API: run step workflow.11.create-gcp-artifact-repository.task.create-repository.step.create-repo.command_type.create
